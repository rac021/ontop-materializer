[PrefixDeclaration]
rdf:		http://www.w3.org/1999/02/22-rdf-syntax-ns#
oboe-core:		http://ecoinformatics.org/oboe/oboe.1.2/oboe-core.owl#
oboe-temporal:		http://ecoinformatics.org/oboe/oboe.1.2/oboe-temporal.owl#
xsd:		http://www.w3.org/2001/XMLSchema#
:		http://opendata.inra.fr/anaeeOnto#
oboe-characteristics:		http://ecoinformatics.org/oboe/oboe.1.2/oboe-characteristics.owl#
oboe-standards:		http://ecoinformatics.org/oboe/oboe.1.2/oboe-standards.owl#
oboe-spatial:		http://ecoinformatics.org/oboe/oboe.1.2/oboe-spatial.owl#
rdfs:		http://www.w3.org/2000/01/rdf-schema#

[MappingDeclaration] @collection [[

mappingId	(2)_foret_meas_Transpiration_VolumetricFlux_dty_id_value_id
target		<http://foret/meas/Transpiration/VolumetricFlux/{dty_id}/{value_id}> a oboe-core:Measurement ; oboe-core:ofCharacteristic :VolumetricFlux ; oboe-core:usesStandard :MilliliterPerMeterSquared ; oboe-core:hasValue <http://{value}> ; oboe-core:hasMeasurementQualifier :Half-HourlyCumulative . 
source		SELECT dty_id, value_id, value FROM (SELECT dt.id AS dty_id, vfs.id_valeur AS value_id, vfs.vfs_valeur AS value, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') AND value_id = ANY(ARRAY(SELECT DISTINCT value_id AS value_id FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon'))) AND dty_id = ANY ( ARRAY (  SELECT DISTINCT dty_id AS dty_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [value_id]:(1) -> value_id ; [dty_id]:(1) -> dty_id */ 

mappingId	(7)_foret_obs_categ_dty_id_var_id
target		<http://foret/obs/categ/{dty_id}/{var_id}> a oboe-core:Observation ; oboe-core:ofEntity :VariableCategory ; oboe-core:hasMeasurement <http://foret/meas/categ/standardName/SurfaceFlux> , <http://foret/meas/categ/standardName/WaterCycle> . 
source		SELECT dt.id AS dty_id, var.id AS var_id FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2') AND var.id = ANY(ARRAY(SELECT DISTINCT var_id AS var_id FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon'))) AND dt.id = ANY ( ARRAY (  SELECT DISTINCT dty_id AS dty_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [var_id]:(1) -> var.id ; [dty_id]:(1) -> dt.id */ 

mappingId	(20)_foret_obs_stand_site_id
target		<http://foret/obs/stand/{site_id}> a oboe-core:Observation ; oboe-core:hasContext <http://foret/obs/experimentalSite/{site_id}> ; oboe-core:ofEntity :Stand . 
source		SELECT site_id FROM (SELECT DISTINCT rootsite.rootzet_id AS site_id, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE localsitenamefilter IN ('Puéchabon') AND site_id = ANY ( ARRAY (  SELECT DISTINCT site_id AS site_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [site_id]:(1) -> site_id */ 

mappingId	(9)_foret_meas_categ_standardName_WaterCycle
target		<http://foret/meas/categ/standardName/WaterCycle> a oboe-core:Measurement ; oboe-core:usesStandard :Anaee-franceVariableCategoryNamingStandard ; oboe-core:ofCharacteristic oboe-characteristics:Name ; oboe-core:hasValue :WaterCycle . 
source		SELECT 1 AS _id_ FROM (VALUES ('1') ) AS __id__

mappingId	(8)_foret_meas_categ_standardName_SurfaceFlux
target		<http://foret/meas/categ/standardName/SurfaceFlux> a oboe-core:Measurement ; oboe-core:usesStandard :Anaee-franceVariableCategoryNamingStandard ; oboe-core:ofCharacteristic oboe-characteristics:Name ; oboe-core:hasValue :SurfaceFlux . 
source		SELECT 1 AS _id_ FROM (VALUES ('1') ) AS __id__

mappingId	(1)_foret_obs_Transpiration_dty_id_mesure_id
target		<http://foret/obs/Transpiration/{dty_id}/{mesure_id}> a oboe-core:Observation ; oboe-core:hasContext <http://foret/obs/TimeInterval/{dty_id}> , <http://foret/obs/TimeInstant/{dty_id}/{mesure_id}> , <http://foret/obs/stand/{site_id}> ; :hasVariableContext <http://foret/obs/var/{dty_id}/{var_id}> ; oboe-core:ofEntity :Transpiration ; oboe-core:hasMeasurement <http://foret/meas/Transpiration/VolumetricFlux/{dty_id}/{value_id}> . 
source		SELECT dty_id, var_id, mesure_id, value_id, site_id FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon' ) 

mappingId	(52)_foret_meas_TimeInstant_endTime_end_time
target		<http://foret/meas/TimeInstant/endTime/{end_time}> a oboe-core:Measurement ; oboe-core:ofCharacteristic :TimeEnd ; oboe-core:usesStandard :DateTime ; oboe-core:hasValue <http://{end_time}> . 
source		SELECT dty_id, mesure_id, end_time FROM (SELECT dt.id AS dty_id, mfs.mfs_id AS mesure_id, mfs.mfs_time AS end_time, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') AND end_time = ANY ( ARRAY (  SELECT DISTINCT end_time AS end_time   FROM (SELECT dt.id AS dty_id, mfs.mfs_id AS mesure_id, mfs.mfs_date AS date, mfs.mfs_time AS end_time, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [end_time]:(50) -> end_time */ 

mappingId	(51)_foret_meas_TimeInstant_date_date
target		<http://foret/meas/TimeInstant/date/{date}> a oboe-core:Measurement ; oboe-core:usesStandard :DateTime ; oboe-core:ofCharacteristic :Date ; oboe-core:hasValue <http://{date}> . 
source		SELECT dty_id, mesure_id, date FROM (SELECT dt.id AS dty_id, mfs.mfs_id AS mesure_id, mfs.mfs_date AS date, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') AND date = ANY ( ARRAY (  SELECT DISTINCT date AS date   FROM (SELECT dt.id AS dty_id, mfs.mfs_id AS mesure_id, mfs.mfs_date AS date, mfs.mfs_time AS end_time, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [date]:(50) -> date */ 

mappingId	(53)_foret_obs_TimeInterval_dty_id
target		<http://foret/obs/TimeInterval/{dty_id}> a oboe-core:Observation ; oboe-core:ofEntity :TimeInterval ; oboe-core:hasMeasurement <http://foret/meas/TimeInterval/duration/minute/30> . 
source		SELECT dt.id AS dty_id, dt.code AS dty_code FROM public.datatype dt WHERE LOWER(dt.name) = 'flux sh' AND dt.id = ANY ( ARRAY (  SELECT DISTINCT dty_id AS dty_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [dty_id]:(1) -> dt.id */ 

mappingId	(50)_foret_obs_TimeInstant_dty_id_mesure_id
target		<http://foret/obs/TimeInstant/{dty_id}/{mesure_id}> a oboe-core:Observation ; oboe-core:ofEntity oboe-temporal:TimeInstant ; oboe-core:hasMeasurement <http://foret/meas/TimeInstant/endTime/{end_time}> , <http://foret/meas/TimeInstant/date/{date}> . 
source		SELECT dty_id, mesure_id, date, end_time FROM (SELECT dt.id AS dty_id, mfs.mfs_id AS mesure_id, mfs.mfs_date AS date, mfs.mfs_time AS end_time, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') AND dty_id = ANY(ARRAY(SELECT DISTINCT dty_id AS dty_id FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon'))) AND mesure_id = ANY ( ARRAY (  SELECT DISTINCT mesure_id AS mesure_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [dty_id]:(1) -> dty_id ; [mesure_id]:(1) -> mesure_id */ 

mappingId	(6)_foret_meas_var_standardName_dty_id_var_id
target		<http://foret/meas/var/standardName/{dty_id}/{var_id}> a oboe-core:Measurement ; oboe-core:usesStandard :Anaee-franceVariableNamingStandard ; oboe-core:ofCharacteristic oboe-characteristics:Name ; oboe-core:hasValue :StandTranspirationFlux . 
source		SELECT dt.id AS dty_id, var.id AS var_id FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2') AND var.id = ANY(ARRAY(SELECT DISTINCT var_id AS var_id FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon'))) AND dt.id = ANY ( ARRAY (  SELECT DISTINCT dty_id AS dty_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [var_id]:(1) -> var.id ; [dty_id]:(1) -> dt.id */ 

mappingId	(4)_foret_obs_var_dty_id_var_id
target		<http://foret/obs/var/{dty_id}/{var_id}> a oboe-core:Observation ; oboe-core:hasContext <http://foret/obs/categ/{dty_id}/{var_id}> ; :graphClassName "flux semi-horaire"^^xsd:string ; oboe-core:ofEntity :Variable ; oboe-core:hasMeasurement <http://foret/meas/var/localName/{dty_id}/{var_id}> , <http://foret/meas/var/standardName/{dty_id}/{var_id}> ; :informationSystemName "SI OBS FORET ALL"^^xsd:string . 
source		SELECT dt.id AS dty_id, var.id AS var_id FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2') AND var.id = ANY(ARRAY(SELECT DISTINCT var_id AS var_id FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon'))) AND dt.id = ANY ( ARRAY (  SELECT DISTINCT dty_id AS dty_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [var_id]:(1) -> var.id ; [dty_id]:(1) -> dt.id */ 

mappingId	(5)_foret_meas_var_localName_dty_id_var_id
target		<http://foret/meas/var/localName/{dty_id}/{var_id}> a oboe-core:Measurement ; oboe-core:usesStandard :Text ; oboe-core:ofCharacteristic oboe-characteristics:Name ; oboe-core:hasValue <http://{var_name_en}> . 
source		SELECT dt.id AS dty_id, var.id AS var_id, CASE WHEN localestring IS NULL THEN var.nom ELSE localestring END AS var_name_en FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id LEFT JOIN localisation loc ON loc.defaultString = var.nom AND loc.entite = 'variable' AND loc.colonne = 'nom' AND localization = 'en' WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2') AND var.id = ANY(ARRAY(SELECT DISTINCT var_id AS var_id FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon'))) AND dt.id = ANY ( ARRAY (  SELECT DISTINCT dty_id AS dty_id   FROM (SELECT dt.id AS dty_id, var.id AS var_id, mfs.mfs_id AS mesure_id, vfs.id_valeur AS value_id, rootsite.rootzet_id AS site_id, EXTRACT(YEAR FROM mfs.mfs_date::date) AS YearFilter, sm.site_uri AS StandardSiteNameFilter, zet.nom AS LocalSiteNameFilter FROM public.datatype dt INNER JOIN public.datatype_unite_variable_foret_vdt dtvu ON dt.id = dtvu.dty_id INNER JOIN public.variable_foret var ON dtvu.var_id = var.id INNER JOIN public.valeurs_flux_tour_vfs vfs ON var.id = vfs.id INNER JOIN public.mesures_flux_sh_mfs mfs ON mfs.mfs_id = vfs.mfs_id INNER JOIN (WITH RECURSIVE parent_zet (id, parent_id) AS (SELECT id, parent_id, code AS zet_code, id AS rootzet_id, code AS rootzet_code FROM zones_etude_zet UNION ALL SELECT p.id, zet.parent_id, zet_code AS zet_code, zet.id AS rootzet_id, zet.code AS rootzet_code FROM parent_zet p JOIN zones_etude_zet zet ON p.parent_id = zet.id) SELECT id AS zet_id, zet_code, rootzet_id, rootzet_code FROM parent_zet WHERE parent_id IS NULL) AS rootsite ON mfs.id = rootsite.zet_id INNER JOIN public.zones_etude_zet zet ON zet.id = rootsite.rootzet_id INNER JOIN public.site_uri_matching sm ON zet.code = sm.site_code WHERE LOWER(dt.name) = 'flux sh' AND LOWER(var.nom) = LOWER('CO2')) AS temp WHERE (YearFilter BETWEEN 2001 AND 2001) AND localsitenamefilter IN ('Puéchabon') ) )  /* [var_id]:(1) -> var.id ; [dty_id]:(1) -> dt.id */ 

mappingId	(54)_foret_meas_TimeInterval_duration_minute_30
target		<http://foret/meas/TimeInterval/duration/minute/30> a oboe-core:Measurement ; oboe-core:usesStandard oboe-standards:Minute ; oboe-core:ofCharacteristic :Duration ; oboe-core:hasValue <http://30> . 
source		SELECT dt.id AS dty_id, dt.code AS dty_code FROM public.datatype dt WHERE LOWER(dt.name) = 'flux sh'

]]
